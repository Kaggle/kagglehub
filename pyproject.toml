[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kagglehub"
dynamic = [
    "version"
]
description = "Access Kaggle resources anywhere"
authors = [
    { name = "Kaggle", email = "support@kaggle.com" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
keywords = ["Kaggle", "API"]
requires-python = ">=3.7"
dependencies = [
  "requests", 
  "tqdm",
  "packaging"
]

[project.urls]
"Homepage" = "https://github.com/Kaggle/kagglehub"
"Bug Tracker" = "https://github.com/Kaggle/kagglehub/issues"

[tool.hatch.version]
path = "src/kagglehub/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "flask",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
integration-test = "pytest {args:integration_tests}"
test-cov = "coverage run -m pytest {args:tests integration_tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "flask",
  "pytest",
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
  # Pre-install `types-*` packages to speed up lint:typing command.
  "types-requests",
  "types-tqdm",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/kagglehub tests}"
style = [
  "ruff check {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff check --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
  "ANN001", 
  "ANN002", 
  "ANN003",
  "ANN201", 
  "ANN202",
  "ANN401",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore md5
  "S324",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore tarfile-unsafe-members
  "S202",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["kagglehub"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
"integration_tests/**/*" = ["PLR2004", "S101", "TID252"]
# Ignore unused imports in __init__.py
"src/kagglehub/**/__init__.py" = ["F401"]

[tool.coverage.run]
source_pkgs = ["kagglehub", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
kagglehub = ["src/kagglehub", "*/kagglehub/src/kagglehub"]
tests = ["tests", "*/kagglehub/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]